@page "/jobs"
@using TranslationManagement.BlazorApp.Components
@using TranslationManagement.Common.Model
@using System.Net.Http
@inject HttpClient Http

<PageTitle>Translation jobs</PageTitle>

<h1>Translation jobs</h1>

<FilterComponent @ref="_filter" OutputChanged="@OnFilterChaged" />

@if (_exception != null)
{
    <p>@_exception.Message</p>
    <p>@_exception.ToString()</p>
}
else if (_jobsF is null)
{
    <p>No data loaded. Please try again later.</p>
}
else
{
    <div class="cardContainer">
        @foreach (var job in _jobsF)
        {
            <JobComponent Item=@job />
        }
    </div>
}

@code {
    private Exception _exception = null!;
    private FilterComponent _filter = null!;
    private TranslationJob[] _jobs = null!;
    private TranslationJob[] _jobsF = null!;

    protected override async Task OnInitializedAsync()
    {
        _exception = null!;
        try
        {
            _jobs = await Http.GetFromJsonAsync<TranslationJob[]>("http://localhost:7729/api/TranslationJob/GetJobs");
            _jobsF = _jobs;
            _filter.Initialize(_jobs);
        }
        catch (Exception e)
        {
            _exception = e;
        }
    }

    private Task OnFilterChaged()
    {
        _jobsF = _filter.Output;
        return Task.CompletedTask;
    }
}